name: Update Cursor Download Links

on:
  schedule:
    - cron: '0 * * * *'  # 每小时运行一次
  workflow_dispatch:     # 允许手动触发

permissions:
  contents: write

jobs:
  update-links:
    runs-on: ubuntu-latest
    # 设置时区为东八区
    env:
      TZ: Asia/Shanghai
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史记录，便于合并

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Update lock file
        run: |
          poetry lock

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-root

      - name: Run update script
        run: |
          poetry run python update_cursor_links.py

      - name: Check for changes
        id: git-check
        run: |
          git diff --exit-code || echo "changes=true" >> $GITHUB_OUTPUT

      - name: Commit and push if changed
        if: steps.git-check.outputs.changes == 'true'
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"

          # 检查哪些文件有更改
          CHANGED_FILES=$(git diff --name-only)
          echo "检测到更改的文件: $CHANGED_FILES"

          # 只暂存实际更改的文件
          git add README.md version-history.json

          # 如果 poetry.lock 有更改，才添加它
          if echo "$CHANGED_FILES" | grep -q "poetry.lock"; then
            echo "添加 poetry.lock 文件"
            git add poetry.lock
          fi

          # 临时提交更改
          git commit -m "临时提交: 更新 Cursor 下载链接"

          # 拉取最新更改
          git pull --rebase origin main

          # 修改最后一次提交信息
          git commit --amend -m "docs: 更新 Cursor 下载链接"

          # 推送更改
          git push --force-with-lease